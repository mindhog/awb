# Standard configuration stuff.

# bind '-' to 'bak'
app bind 45 [callback { bak }]

# bind '=' (under '+') to fwd
app bind 61 [callback { fwd }]

connect fluidsynth:r_00 system:playback_1
connect fluidsynth:l_00 system:playback_2
connect awb:left system:playback_1
connect awb:right system:playback_2

# Connect a midi device to AWB's midi input (this depends on selected midi
# device numbers and therefore sucks).
#shell aconnect 28:0 128:0
if {== $UI_MODE text} {
    # In text mode, we have to make sure we have a midi engine and we route
    # all events received by the engine to the event manager.  This way all of
    # the existing control bindings still work.  Then connect the midi
    # controller to the AWBX device (which goes to the midi engine) instead of
    # the AWB device (which goes to the event manager).
    [getMidiEngine] routeToEventManager
    connect 'midi:nanoKONTROL2/nanoKONTROL2 MIDI 1'  'midi:AWBX/in'
} else {
    connect 'midi:nanoKONTROL2/nanoKONTROL2 MIDI 1'  'midi:AWB/in'
}

# 899833 stray_mark
# 2181881 101_brain_damaged.wav

# Keeps track of the next track to be allocated with the "track" command.
var trackNum 0

def makeProject {} {
    var result [[evtrec] Project $scriptDir]

    # bind 'm' ("mark") to write the position.
    app bind 109 [callback {
        var pos [tell]
        print 'marking ' $pos '\n'
        $project writeLog [format 'mark ' $pos '\n']
    }]

    $result bindControllerScript 41 {
        print 'got control event\n'
        if {event value} {
            print 'playing'
            play
        }
        print 'done with control event\n'
    }

    give $result
}

# Adds a new track.
def track {file} {
    var volCC [+ [* 256 $trackNum] $trackNum]
    var panCC [+ $volCC 16]
    $project addTrack $file $volCC $panCC
    set trackNum [+ $trackNum 1]
}

def pan {track val} {
    $project setPan $track $val
}

def getPan {track} {
    $project getPan $track
}

def vol {track val} {
    $project setVol $track $val
}

def getVol {track} {
    $project getVol $track
}

def gain {track val} {
    $project setGain $track $val
}

def getGain {track} {
    $project getGain $track
}

# Bindings for Korg Nanokontrol (channel,controller):
# << - 0,43
# >> - 0,44
# Stop - 0,42
# Play - 0,41
# Record - 0,45
# Track < - 0,58
# Track > - 0,59
